generator client {
    provider = "prisma-client-js"
    // output   = "../lib/generated/prisma"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum CustomerType {
    personal
    corporate
    government
}

enum IdentificationType {
    passport
    nationalID
    driverLicense
    CRN
}

enum UserRole {
    admin
    accountant
    sales
    viewer
    user
}

enum Language {
    en
    ar
}

enum InvoiceStatus {
    draft
    issued
    canceled
}

enum PaymentStatus {
    paid
    unpaid
    partiallyPaid
}

enum InvoiceType {
    cash
    creditCard
    bankTransfer
    other
}

// model Address {
//     id             String  @id @default(cuid())
//     country        String
//     city           String
//     street         String
//     buildingNumber String?
//     area           String?
//     plotID         String?
//     postalCode     String?

//     customerId String
//     customer   Customer @relation(fields: [customerId], references: [id])

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

// model Customer {
//     id                   String             @id @default(cuid())
//     customerType         CustomerType
//     englishName          String
//     arabicName           String
//     mobileNumber         String
//     emailNotification    Boolean
//     email                String             @unique
//     ccEmail              String?
//     taxNumber            String
//     isActive             Boolean
//     identificationType   IdentificationType
//     identificationNumber String
//     contactPerson        String?

//     addresses Address[]
//     invoices  Invoice[]
//     reports   Report[]

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt

//     @@index([email])
//     @@index([taxNumber])
// }

// model Category {
//     id          String  @id @default(cuid())
//     name        String
//     description String?

//     products Product[]

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

// model Product {
//     id          String  @id @default(cuid())
//     englishName String
//     arabicName  String
//     basePrice   Decimal
//     taxRate     Decimal
//     description String?
//     isActive    Boolean

//     categoryId   String?
//     category     Category?        @relation(fields: [categoryId], references: [id])
//     pricings     ProductPricing[]
//     invoiceItems InvoiceItem[]

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

// model ProductPricing {
//     id        String    @id @default(cuid())
//     price     Decimal
//     startDate DateTime
//     endDate   DateTime?

//     productId String
//     product   Product @relation(fields: [productId], references: [id])

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

model User {
    id              String   @id @default(cuid())
    firstName       String   @default("")
    lastName        String   @default("")
    email           String   @unique
    image           String?
    role            UserRole @default(user)
    tempPassword    String   @default("")
    mobileNumber    String   @default("")
    defaultLanguage Language @default(en)
    isActive        Boolean  @default(false)

    invoiceId String?
    invoices  Invoice[]

    // department relations
    departmentId String?
    department   Department? @relation(fields: [departmentId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Invoice {
    id            String        @id @default(cuid())
    invoiceNumber String        @unique
    type          InvoiceType
    status        InvoiceStatus
    paymentStatus PaymentStatus
    subtotal      Decimal       @default(0) @db.Decimal(10, 3)
    tax           Decimal       @default(0) @db.Decimal(10, 3)
    total         Decimal       @default(0) @db.Decimal(10, 3)
    issueDate     DateTime      @default(now())
    dueDate       DateTime      @default(dbgenerated("CURRENT_DATE + INTERVAL '7 days'"))
    description   String?

    // user relations
    createdById String
    createdBy   User?  @relation(fields: [createdById], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Department {
    id          String  @id @default(cuid())
    name        String  @unique
    description String?
    isActive    Boolean
    users       User[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// model InvoiceItem {
//     id              String  @id @default(cuid())
//     invoiceId       String
//     productId       String
//     quantity        Int
//     unitPrice       Decimal
//     taxRate         Decimal
//     totalLineAmount Decimal

//     invoice Invoice @relation(fields: [invoiceId], references: [id])
//     product Product @relation(fields: [productId], references: [id])

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }

// model Payment {
//     id              String        @id @default(cuid())
//     method          PaymentMethod
//     details         String?
//     amount          Decimal
//     date            DateTime
//     referenceNumber String?

//     invoiceId String
//     invoice   Invoice @relation(fields: [invoiceId], references: [id])

//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
// }
